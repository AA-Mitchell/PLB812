Methods:

For this one I used a list and a "For" loop that initially defined all the .fastq files to be trimmed/run through fastqc. I then referenced this list within
the input line of cutadapt. The tricky part was loading paired end reads appropriately, though this was solved by creating a simple list of SRR accession names
without formatting, then passing the variable ${i} to cutadapt and including the distinction of either _1.fastq or _2.fastq

I linked the output of cutadapt to the mv command to send all trimmed fastq files to a seperate directory "trimmed_fastq_files" 
I then had fastqc run all files within this newly created directory and output the resultant .html files to another directory "trimmed_fastqc_files"

I used 'cp' to copy these .html files to my github repository under Assignment3 and pushed them to github
